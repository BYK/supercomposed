[supervisord]
logfile = /dev/stdout
logfile_maxbytes = 0
logfile_backups = 0
loglevel = debug
nodaemon = true
nocleanup = true

[program:smtp]
command = docker-entrypoint.sh exim -bd -v
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:memcached]
command = docker-entrypoint.sh -I %(ENV_SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE)s
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:redis]
command = docker-entrypoint.sh redis-server
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:postgres]
command = docker-entrypoint.sh postgres -c max_connections=%(ENV_POSTGRES_MAX_CONNECTIONS)s
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = POSTGRES_HOST_AUTH_METHOD="trust"

[program:kafka]
command = /etc/confluent/docker/run
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = KAFKA_PROCESS_ROLES="broker,controller",KAFKA_CONTROLLER_QUORUM_VOTERS="1001@127.0.0.1:29093",KAFKA_CONTROLLER_LISTENER_NAMES="CONTROLLER",KAFKA_NODE_ID="1001",CLUSTER_ID="MkU3OEVBNTcwNTJENDM2Qk",KAFKA_LISTENERS="PLAINTEXT://0.0.0.0:29092,INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093",KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://127.0.0.1:29092,INTERNAL://kafka:9093,EXTERNAL://kafka:9092",KAFKA_LISTENER_SECURITY_PROTOCOL_MAP="PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT",KAFKA_INTER_BROKER_LISTENER_NAME="PLAINTEXT",KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR="1",KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS="1",KAFKA_LOG_RETENTION_HOURS="24",KAFKA_MESSAGE_MAX_BYTES="50000000",KAFKA_MAX_REQUEST_SIZE="50000000",CONFLUENT_SUPPORT_METRICS_ENABLE="false",KAFKA_LOG4J_LOGGERS="kafka.cluster=WARN,kafka.controller=WARN,kafka.coordinator=WARN,kafka.log=WARN,kafka.server=WARN,state.change.logger=WARN",KAFKA_LOG4J_ROOT_LOGLEVEL="WARN",KAFKA_TOOLS_LOG4J_LOGLEVEL="WARN"

[program:clickhouse]
command = 
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = MAX_MEMORY_USAGE_RATIO="0.3"

[program:geoipupdate]
command = /usr/bin/geoipupdate -d /sentry -f /sentry/GeoIP.conf 
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:snuba-api]
command = 
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-errors-consumer]
command = rust-consumer --storage errors --consumer-group snuba-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-outcomes-consumer]
command = rust-consumer --storage outcomes_raw --consumer-group snuba-consumers --auto-offset-reset=earliest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-outcomes-billing-consumer]
command = rust-consumer --storage outcomes_raw --consumer-group snuba-consumers --auto-offset-reset=earliest --max-batch-time-ms 750 --no-strict-offset-reset --raw-events-topic outcomes-billing
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-group-attributes-consumer]
command = rust-consumer --storage group_attributes --consumer-group snuba-group-attributes-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-replacer]
command = replacer --storage errors --auto-offset-reset=latest --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-subscription-consumer-events]
command = subscriptions-scheduler-executor --dataset events --entity events --auto-offset-reset=latest --no-strict-offset-reset --consumer-group=snuba-events-subscriptions-consumers --followed-consumer-group=snuba-consumers --schedule-ttl=60 --stale-threshold-seconds=900
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-transactions-consumer]
command = rust-consumer --storage transactions --consumer-group transactions_group --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-replays-consumer]
command = rust-consumer --storage replays --consumer-group snuba-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-issue-occurrence-consumer]
command = rust-consumer --storage search_issues --consumer-group generic_events_group --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-metrics-consumer]
command = rust-consumer --storage metrics_raw --consumer-group snuba-metrics-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-subscription-consumer-transactions]
command = subscriptions-scheduler-executor --dataset transactions --entity transactions --auto-offset-reset=latest --no-strict-offset-reset --consumer-group=snuba-transactions-subscriptions-consumers --followed-consumer-group=transactions_group --schedule-ttl=60 --stale-threshold-seconds=900
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-subscription-consumer-metrics]
command = subscriptions-scheduler-executor --dataset metrics --entity metrics_sets --entity metrics_counters --auto-offset-reset=latest --no-strict-offset-reset --consumer-group=snuba-metrics-subscriptions-consumers --followed-consumer-group=snuba-metrics-consumers --schedule-ttl=60 --stale-threshold-seconds=900
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-generic-metrics-distributions-consumer]
command = rust-consumer --storage generic_metrics_distributions_raw --consumer-group snuba-gen-metrics-distributions-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-generic-metrics-sets-consumer]
command = rust-consumer --storage generic_metrics_sets_raw --consumer-group snuba-gen-metrics-sets-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-generic-metrics-counters-consumer]
command = rust-consumer --storage generic_metrics_counters_raw --consumer-group snuba-gen-metrics-counters-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-generic-metrics-gauges-consumer]
command = rust-consumer --storage generic_metrics_gauges_raw --consumer-group snuba-gen-metrics-gauges-consumers --auto-offset-reset=latest --max-batch-time-ms 750 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-profiling-profiles-consumer]
command = rust-consumer --storage profiles --consumer-group snuba-consumers --auto-offset-reset=latest --max-batch-time-ms 1000 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-profiling-functions-consumer]
command = rust-consumer --storage functions_raw --consumer-group snuba-consumers --auto-offset-reset=latest --max-batch-time-ms 1000 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:snuba-spans-consumer]
command = rust-consumer --storage spans --consumer-group snuba-spans-consumers --auto-offset-reset=latest --max-batch-time-ms 1000 --no-strict-offset-reset
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SNUBA_SETTINGS="self_hosted",CLICKHOUSE_HOST="clickhouse",DEFAULT_BROKERS="kafka:9092",REDIS_HOST="redis",UWSGI_MAX_REQUESTS="10000",UWSGI_DISABLE_LOGGING="true",SENTRY_EVENT_RETENTION_DAYS=null

[program:symbolicator]
command = run -c /etc/symbolicator/config.yml
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:symbolicator-cleanup]
command = "55 23 * * * gosu symbolicator symbolicator cleanup"
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:web]
command = /etc/sentry/entrypoint.sh run web
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:cron]
command = /etc/sentry/entrypoint.sh run cron
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:worker]
command = /etc/sentry/entrypoint.sh run worker
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:events-consumer]
command = /etc/sentry/entrypoint.sh run consumer ingest-events --consumer-group ingest-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:attachments-consumer]
command = /etc/sentry/entrypoint.sh run consumer ingest-attachments --consumer-group ingest-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:post-process-forwarder-errors]
command = /etc/sentry/entrypoint.sh run consumer --no-strict-offset-reset post-process-forwarder-errors --consumer-group post-process-forwarder --synchronize-commit-log-topic=snuba-commit-log --synchronize-commit-group=snuba-consumers
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:subscription-consumer-events]
command = /etc/sentry/entrypoint.sh run consumer events-subscription-results --consumer-group query-subscription-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:transactions-consumer]
command = /etc/sentry/entrypoint.sh run consumer ingest-transactions --consumer-group ingest-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:metrics-consumer]
command = /etc/sentry/entrypoint.sh run consumer ingest-metrics --consumer-group metrics-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:generic-metrics-consumer]
command = /etc/sentry/entrypoint.sh run consumer ingest-generic-metrics --consumer-group generic-metrics-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:billing-metrics-consumer]
command = /etc/sentry/entrypoint.sh run consumer billing-metrics-consumer --consumer-group billing-metrics-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:ingest-replay-recordings]
command = /etc/sentry/entrypoint.sh run consumer ingest-replay-recordings --consumer-group ingest-replay-recordings
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:ingest-occurrences]
command = /etc/sentry/entrypoint.sh run consumer ingest-occurrences --consumer-group ingest-occurrences
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:ingest-profiles]
command = /etc/sentry/entrypoint.sh run consumer ingest-profiles --consumer-group ingest-profiles
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:ingest-monitors]
command = /etc/sentry/entrypoint.sh run consumer ingest-monitors --consumer-group ingest-monitors
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:ingest-feedback-events]
command = /etc/sentry/entrypoint.sh run consumer ingest-feedback-events --consumer-group ingest-feedback
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:monitors-clock-tick]
command = /etc/sentry/entrypoint.sh run consumer monitors-clock-tick --consumer-group monitors-clock-tick
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:monitors-clock-tasks]
command = /etc/sentry/entrypoint.sh run consumer monitors-clock-tasks --consumer-group monitors-clock-tasks
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:post-process-forwarder-transactions]
command = /etc/sentry/entrypoint.sh run consumer --no-strict-offset-reset post-process-forwarder-transactions --consumer-group post-process-forwarder --synchronize-commit-log-topic=snuba-transactions-commit-log --synchronize-commit-group transactions_group
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:post-process-forwarder-issue-platform]
command = /etc/sentry/entrypoint.sh run consumer --no-strict-offset-reset post-process-forwarder-issue-platform --consumer-group post-process-forwarder --synchronize-commit-log-topic=snuba-generic-events-commit-log --synchronize-commit-group generic_events_group
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:subscription-consumer-transactions]
command = /etc/sentry/entrypoint.sh run consumer transactions-subscription-results --consumer-group query-subscription-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:subscription-consumer-metrics]
command = /etc/sentry/entrypoint.sh run consumer metrics-subscription-results --consumer-group query-subscription-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:subscription-consumer-generic-metrics]
command = /etc/sentry/entrypoint.sh run consumer generic-metrics-subscription-results --consumer-group query-subscription-consumer
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:sentry-cleanup]
command = /entrypoint.sh "0 0 * * * gosu sentry sentry cleanup --days %(ENV_SENTRY_EVENT_RETENTION_DAYS)s"
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = PYTHONUSERBASE="/data/custom-packages",SENTRY_CONF="/etc/sentry",SNUBA="http://snuba-api:1218",VROOM="http://vroom:8085",DEFAULT_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt",GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR="/etc/ssl/certs/ca-certificates.crt",COMPOSE_PROFILES=null,SENTRY_EVENT_RETENTION_DAYS=null,SENTRY_MAIL_HOST=null,SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE=null,OPENAI_API_KEY=null

[program:nginx]
command = /docker-entrypoint.sh nginx -g "daemon off;"
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:relay]
command = 
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0

[program:vroom]
command = 
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SENTRY_KAFKA_BROKERS_PROFILING="kafka:9092",SENTRY_KAFKA_BROKERS_OCCURRENCES="kafka:9092",SENTRY_BUCKET_PROFILES="file://localhost//var/lib/sentry-profiles",SENTRY_SNUBA_HOST="http://snuba-api:1218"

[program:vroom-cleanup]
command = /entrypoint.sh "0 0 * * * find /var/lib/sentry-profiles -type f -mtime +%(ENV_SENTRY_EVENT_RETENTION_DAYS)s -delete"
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
environment = SENTRY_EVENT_RETENTION_DAYS=null

